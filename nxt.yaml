apiVersion: v1
kind: Namespace
metadata:
  name: squidgame
spec : {}
status: {}
--- #primer cliente
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grpc-client-rabbit
  name: grpc-client-rabbit
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-client-rabbit
  strategy: {}
  template:
    metadata:
      labels:
        app: grpc-client-rabbit
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/grpc-client-rabbit
        name: grpc-client-rabbit
        ports:
          - containerPort: 3001
          - containerPort: 9001
        resources: {}
      - image: carlostex/rabbitmq-client
        name: rabbitmq-client
        ports:
          - containerPort: 9001
          - containerPort: 5672
        resources: {}
status: {}
--- #segundo cliente
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grpc-client-pubsub
  name: grpc-client-pubsub
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-client-pubsub
  strategy: {}
  template:
    metadata:
      labels:
        app: grpc-client-pubsub
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/grpc-client-pubsub
        name: grpc-client-pubsub
        resources: {}
        ports:
          - containerPort: 8080
          - containerPort: 9002
      - image: carlostex/pubsub-client
        name: pubsub-client
        resources: {}
        ports:
          - containerPort: 8080
          - containerPort: 9002
status: {}
--- #tercer cliente (1)
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grpc-client-kafka
  name: grpc-client-kafka
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-client-kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: grpc-client-kafka
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/grpc-client-kafka
        name: grpc-client-kafka
        ports:
          - containerPort: 29092
          - containerPort: 9003
        resources: {}
      - image: carlostex/kafka-client
        name: kafka-client
        ports:
          - containerPort: 29092
          - containerPort: 9003
        resources: {}
status: {}
--- #workers
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rabbitmq-worker
  name: rabbitmq-worker
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-worker
  strategy: {}
  template:
    metadata:
      labels:
        app: rabbitmq-worker
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/rabbitmq-worker
        name: rabbitmq-worker
        resources: {}
        ports:
          - containerPort: 5672
          - containerPort: 27017
status: {}
--- #segundo workers
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pubsub-worker
  name: pubsub-worker
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pubsub-worker
  strategy: {}
  template:
    metadata:
      labels:
        app: pubsub-worker
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/pubsub-worker
        name: pubsub-worker
        resources: {}
        ports:
          - containerPort: 8080
          - containerPort: 27017
status: {}
--- #tercer workers
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-worker
  name: kafka-worker
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-worker
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka-worker
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: carlostex/kafka-worker
        name: kafka-worker
        resources: {}
        ports:
          - containerPort: 8094
status: {}
--- #servicios
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grpc-client-rabbit
  name: grpc-client-rabbit
  namespace: squidgame
spec:
  ports:
  - port: 3000
    name: grpc11
    protocol: TCP
    targetPort: 3001
  - port: 9001
    name: grpc12
    protocol: TCP
    targetPort: 9001
  - port: 30000
    name: x3
    protocol: TCP
    targetPort: 3000
  selector:
    app: grpc-client-rabbit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grpc-client-pubsub
  name: grpc-client-pubsub
  namespace: squidgame
spec:
  ports:
  - port: 3000
    name: grpc21
    protocol: TCP
    targetPort: 3002
  - port: 9002
    name: grpc22
    protocol: TCP
    targetPort: 9002
  - port: 30001
    name: x2
    protocol: TCP
    targetPort: 30001
  selector:
    app: grpc-client-pubsub
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grpc-client-kafka
  name: grpc-client-kafka
  namespace: squidgame
spec:
  ports:
  - port: 3000
    name: grpc31
    protocol: TCP
    targetPort: 3003
  - port: 9003
    name: grpc32
    protocol: TCP
    targetPort: 9003
  - port: 30002
    name: x1
    protocol: TCP
    targetPort: 3002
  selector:
    app: grpc-client-kafka
  type: ClusterIP
status:
  loadBalancer: {}
--- #servicios worker
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq-worker
  name: rabbitmq-worker
  namespace: squidgame
spec:
  selector:
    app: rabbitmq-worker
  ports:
  - port: 32000
    name: a1
    protocol: TCP
    targetPort: 32000
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pubsub-worker
  name: pubsub-worker
  namespace: squidgame
spec:
  selector:
    app: pubsub-worker
  ports:
  - port: 32001
    name: b1
    protocol: TCP
    targetPort: 32001
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-worker
  name: kafka-worker
  namespace: squidgame
spec:
  selector:
    app: kafka-worker
  ports:
  - port: 8094
    name: c1
    protocol: TCP
    targetPort: 8094
  type: ClusterIP
status:
  loadBalancer: {}
--- #networking
apiVersion: networking.k8s.io/v1 
kind: Ingress 
metadata: 
  name: minimal-ingress 
  annotations: 
    kubernetes.io/ingress.class: nginx 
    nginx.ingress.kubernetes.io/rewrite-target: / 
    nginx.ingress.kubernetes.io/service-upstream: "true"
  namespace: squidgame
spec: 
  rules: 
  - host: 34.70.68.48.nip.io
    http: 
      paths: 
      - path: /
        pathType: Prefix 
        backend: 
           service: 
            name: grpc-client-rabbit
            port: 
              number: 3000
      - path: /om1
        pathType: Prefix 
        backend: 
           service: 
            name: kafka-worker
            port: 
              number: 8094
---
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: splitter
  namespace: squidgame
spec:
  service: grpc-client-kafka 
  backends:
  - service: grpc-client-rabbit
    weight: 33
  - service: grpc-client-pubsub
    weight: 33
  - service: grpc-client-kafka
    weight: 34
--- #servicios port 1


